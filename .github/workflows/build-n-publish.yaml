name: Build and publish Raptor Ros Core Docker Image

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: wisniax/ros-core
          tags: |
            # On new version tag (e.g., v1.2.3) -> create v1.2.3
            type=ref,event=tag

            # Assign latest only if it's a version tag
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            # On new push to master -> create nightly
            type=raw,value=nightly,enable=${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}

            # On each PR with master as target -> create pr-<id>
            # This uses the PR number from the event context directly.
            type=raw,value=pr-${{ github.event.number }},enable=${{ github.event_name == 'pull_request' }}

            # Default: For push to any branch or manual trigger -> create <branch-name>
            # This will now apply to 'master' pushes (in addition to 'nightly')
            # and 'workflow_dispatch' builds.
            type=ref,event=branch

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=wisniax/ros-core:buildcache
          cache-to: type=registry,ref=wisniax/ros-core:buildcache,mode=max