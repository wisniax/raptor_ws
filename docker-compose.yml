services:
  ros-core:
    build:
      context: .
      dockerfile: ./.devcontainer/Dockerfile
    image: wisniax/ros-core:latest
    stdin_open: true
    container_name: ros-core
    hostname: ros-core
    tty: true
    pid: "host"
    ipc: "host"
    init: true
    network_mode: host
    environment:
      - TZ=Europe/Warsaw
      - ROS_ENABLE_AUTOSTART=1
      - ROS_BUILD_ON_STARTUP=on-failure
      - ROS_ENABLE_CAN_BRIDGE=1
    volumes:
      - type: bind
        source: ./
        target: /mnt/local
        bind:
          create_host_path: true
      - type: bind
        source: ./.devcontainer/rex
        target: /etc/init.d/rex
        bind:
          create_host_path: true
      - type: bind
        source: ./.devcontainer/ca.crt
        target: /opt/share/raptor_ws_mqtt_certs/ca.crt
        read_only: true
      - type: bind
        source: /dev/shm
        target: /dev/shm
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    network_mode: host
    volumes:
      - ./.devcontainer/mosquitto.conf:/mosquitto/config/mosquitto.conf
      # read-only bind mounts make compose fail when the source path doesn't exist - and this is our intention here
      - type: bind
        source: ./.devcontainer/mosquitto_passwd
        target: /mosquitto/mosquitto_passwd
        read_only: true
      - ./.mosquitto/data:/mosquitto/data
      - ./.mosquitto/log:/mosquitto/log
      - type: bind
        source: ./.devcontainer/mqtt-server-certs
        target: /mosquitto/certs
        read_only: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-h", "mosquitto", "-p", "8883", "-t", "$$SYS/#", "--cafile", "/mosquitto/certs/ca.crt", "-u", "${MQTT_USERNAME:-raptors}", "-P", "${MQTT_PASSWORD:-changeme}", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
